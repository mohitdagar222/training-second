install git
install database
install rvm
install ruby
install nvm
git@github.com:yafetd/Loovit-Final.git
chmod 400 ~/.ssh/id_rsa (git access denied)
ssh-add ~/.ssh/id_rsa (not have correct access rights)
chmod 600 ~/.ssh/*


sudo apt install curl
curl -sL https://deb.nodesource.com/setup_lts.x | sudo -E bash -
curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list

sudo apt-get update
sudo apt-get install git-core zlib1g-dev build-essential libssl-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev libcurl4-openssl-dev software-properties-common libffi-dev nodejs yarn

sudo apt install postgresql-11 libpq-dev

** project setup steps =>
git clone
setup database.yml, .env file
bundle install 
rake db:create
yarn install (if error switch node version, remove node modules, yarn install, install redis server, webpacker and run)
rails db:migrate
rails db:seed

pg_restore --verbose --clean --no-acl --no-owner -h localhost -U postgres -d make_dev 26_8_2021_staging_latest.dump
pg_dump -F c -v -U postgres -h localhost referralhero_stag -f /tmp/staging_db.psql
pg_restore --verbose --clean --no-acl --no-owner -h localhost -U postgres -d referralhero_staging_dump /var/www/maitre/current/staging_db.psql
psql -U postgres -h localhost itsacheckmate_development < sqlfile.sql




git fetch && git checkout branch-name (when checkout first time to a branch)

gem 'awesome_print', require: 'ap'

**webpacker
must use in rails application(manifest error)
bundle exec rails webpacker:install
rails webpacker:install
yarn add @rails/webpacker
bin/rails webpacker:install
webpacker server => bin/webpack-dev-server


** Partials <%= render "form", post: @post %>
	    <%= render :partial => 'form', locals: { post: @post } %>
	        document.querySelector("#PostsList").html("<%= escape_javascript render("posts", posts: @posts)%>");


git fetch && git checkout feature/client-hirings ( to switch branch )

**
sudo apt install redis-server
sudo systemctl status redis-server
bundle exec sidekiq
bundle exec sidekiq -e development -q mailers -q default

**(to create project with specific rails version)
gem install rails -v '5.2.3' -V --no-document
gem list rails --local
rails _5.2.3_ new ajax-demo2 -d postgresql

-------------------------------

Shut down ubuntu using terminal

-> sudo poweroff
-> shutdown -h now
-> shutdown -h 30
-> shutdown -c


----------------------------

AUTHENTICATION SOCIAL LOGIN

first create app on particular platform in developer section
get client id and secrets
install gem
add omniauth.rb file in initializers
set env variables
create login link
add routes for callback
create user

cryptic-shelf-69940

                        
 REFERENCES ->
   add_reference :people, :foo_bar_store, foreign_key: { to_table: :stores }
   t.references :feature, foreign_key: {to_table: :product_features}
   add_reference :uploads, :user, foreign_key: true
   t.references :user, foreign_key: true

--------------------------------------------------------------------------
   --KB beryl systems
   setup action mailer
   bundle
   create
   migrate
   seed
   rake assets:precompile
   
   multiple checkboxes - https://stackoverflow.com/questions/26976895/ruby-on-rails-select-and-deselect-all-checkboxes
   devise mails sidekiq - https://medium.com/@p_rajkumar/send-devise-emails-in-background-sidekiq-c64bdda9209e
   generate drive link - http://kolorobot.github.io/permalink/
   maps api - https://pjbelo.medium.com/using-google-maps-api-v3-with-rails-5-2-b066a4b2cf14
     https://ourcodeworld.com/articles/read/830/how-to-highlight-an-area-city-state-or-country-in-google-maps-with-javascript
   recent posts by user - https://stackoverflow.com/questions/46076801/list-only-the-last-5-articles-seen-by-current-user  
 
----------------------------------------------------------------------
makerble changes in files

gemfile
story.rb
 development.rb
 migration
 
--------------------------------------------------------------------------

TYPES OF JS REQUESTS

*can send ajax request and receive response and set html to that response
*can send js request and render json with any partial directly
   html_string = render_to_string(partial: "maps/map_box", layout: false, formats: [:html])
   render json: { html: html_string }
*normaly send js request and use .js.erb file

** send params to js function => onclick: fn(a,b) or set hidden fields with value and fetch it with js or make div and fetch its html

 --------------------------------------
 dropdowns
 
 <%= form_with(url: "/user_projects") do |f| %>
  <label for="metric_id">1. Choose a type of metric</label>
  <br/>
  <%= f.select :metric_id,["Progress Tracker", "Calculator", "Open Data"], :prompt => 'Choose a type of metric' %>
  <br/>
  <div id="projects-dropdown" style="display:none;">
    <label for="project_id">2. Choose a project or album</label>
    <br/>
    <%= f.collection_select :project_id,@projects,:id, :name, :prompt => 'Choose a project or album' %>
  </div>
  <% grouped_options = [['Participation Tracker',@project_changes.present? ? @project_changes.collect {|p| [ p.name, p.id ] } : ""], ['Activity   Tracker', ["San Francisco", "Mountain View"]]] %>
  <%= select_tag :tracker_id, grouped_options_for_select(grouped_options), prompt: 'Choose a progress Tracker', class: "form-control"  %>

  <br/>
  <%= f.submit %>
<% end % 
          
         
=========================================

map, pluck, || in assigning values , ternary operator, flatten!, concat, +

User.last.charities.map{|c| c.projects}
User.last.charities.map(&:projects)
@project_ids.concat charity.projects.pluck(:id)       
            
            
            
            ===============
            
            
            
 var array = [];
    $("#form-custom-color-fields .field-set .custom[type='number'], select.custom option:selected").each(function (){
      if(!$(this).prop("disabled") && this.value !== undefined && this.value != "" && !$(this).parent("select").prop("disabled")){
        array.push(this.value);
      }
      filter_data["parent-fieldset"] = array;
    });

            
         $(this).find(":input").each(function (){   
            ================================================
            
            
            
            
            
            
            
            
            
            
            
            
            
 
           <% if @minimum_password_length %>
              <em>(<%= @minimum_password_length %> characters minimum)</em>
            <% end %>     
            
                  <div class = "text-success d-flex justify-content-center mb-2"> 
                   <%= flash[:notice] %>
                  </div>
            
               <%= render "users/shared/error_messages", resource: resource %>
  
                
 def content 
    if params[:name].present?
      @designs = []
      freelancers = User.where("first_name ilike ?", "#{params[:name]}%")
      workdesigns = WorkDesign.where("name ilike ?", "#{params[:name]}%")
      if freelancers.present?
        freelancers.each do |freelancer|
          if freelancer.work_designs.present?
            freelancer.work_designs.each do |d| 
              @designs << d 
            end
          end
        end
      elsif workdesigns.present?
        workdesigns.each do |workdesign|
          @designs << workdesign
        end
      end
    end
  end
  
  content.js
  $("#content").html("<%=j render partial: "design" %>")
$("#search-form").bind("ajax:complete", function(event,xhr,status){
   $('#name').val('');
 })



   <a class='blue-btn mt-2 px-3 py-2 d-inline-block radius5' data-toggle="modal" data-target="#LoginModal">Hire me</a>
              <%= link_to('Login Now', '#', class:'blue-btn blue-btn px-4 py-1 radius5' 'blue-btn mt-2 px-3 py-2 d-inline-block radius5', data: { toggle: 'modal', target: '#LoginModal', dismiss: 'modal' }) %>
 
 
